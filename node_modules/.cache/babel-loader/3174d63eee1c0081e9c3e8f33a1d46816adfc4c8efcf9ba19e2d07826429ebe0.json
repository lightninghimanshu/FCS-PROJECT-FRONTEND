{"ast":null,"code":"var _jsxFileName = \"/home/iiitd/project/git/FCS/src/components/Generate/Generate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenCert() {\n  _s();\n  const [inputText, setInputText] = useState(null);\n  const [certificate, setCertificate] = useState('');\n  const handleInputChange = e => {\n    setInputText(e.target.files[0]);\n  };\n  const generateCertificate = async () => {\n    try {\n      const formData = new FormData();\n      // formData.append('input_text', inputText);\n\n      console.log(\"Going to Flask\");\n      const response = await axios.post('https://192.168.2.241:5000/g', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setCertificate(response.data.certificate);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4 border-2 border-black w-1/2 p-4 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Generate Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"inputtxt\",\n      className: \"text-lg\",\n      children: \"Upload initial cert file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"inputtxt\",\n      onChange: handleInputChange,\n      accept: \".txt\",\n      className: \"border border-gray-300 p-2 rounded-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateCertificate,\n      className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\",\n      children: \"Generate Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), certificate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-black w-1/2 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold\",\n        children: \"Certificate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"overflow-auto\",\n        children: certificate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(GenCert, \"MXnA/bFKYH4sr85CwChXlVREkbk=\");\n_c = GenCert;\nexport default GenCert;\nvar _c;\n$RefreshReg$(_c, \"GenCert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenCert","_s","inputText","setInputText","certificate","setCertificate","handleInputChange","e","target","files","generateCertificate","formData","FormData","console","log","response","post","headers","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["/home/iiitd/project/git/FCS/src/components/Generate/Generate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction GenCert() {\r\n  const [inputText, setInputText] = useState(null);\r\n  const [certificate, setCertificate] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputText(e.target.files[0]);\r\n  };\r\n\r\n  const generateCertificate = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      // formData.append('input_text', inputText);\r\n      \r\n      console.log(\"Going to Flask\")\r\n      const response = await axios.post('https://192.168.2.241:5000/g', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setCertificate(response.data.certificate);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"space-y-4 border-2 border-black w-1/2 p-4 rounded-lg\">\r\n        <h1 className=\"text-2xl font-bold\">Generate Certificate</h1>\r\n        <label htmlFor=\"inputtxt\" className=\"text-lg\">\r\n          Upload initial cert file:\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"inputtxt\"\r\n          onChange={handleInputChange}\r\n          accept=\".txt\"\r\n          className=\"border border-gray-300 p-2 rounded-md\"\r\n        />\r\n\r\n        {/* Uncomment this textarea if needed\r\n    <textarea\r\n      placeholder=\"Input Text\"\r\n      value={inputText}\r\n      onChange={handleInputTextChange}\r\n      className=\"border border-gray-300 p-2 rounded-md\"\r\n    ></textarea>\r\n    */}\r\n\r\n        <button\r\n          onClick={generateCertificate}\r\n          className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\"\r\n        >\r\n          Generate Certificate\r\n        </button>\r\n\r\n        {certificate && (\r\n          <div className=\"border-2 border-black w-1/2 p-4 rounded-lg\">\r\n            <h2 className=\"text-lg font-bold\">Certificate:</h2>\r\n            <pre className=\"overflow-auto\">{certificate}</pre>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default GenCert;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/B;;MAEAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,8BAA8B,EAAEL,QAAQ,EAAE;QAC1EM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFZ,cAAc,CAACU,QAAQ,CAACG,IAAI,CAACd,WAAW,CAAC;IAC3C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,sDAAsD;IAAAC,QAAA,gBACnEtB,OAAA;MAAIqB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5D1B,OAAA;MAAO2B,OAAO,EAAC,UAAU;MAACN,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAE9C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR1B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,UAAU;MACbC,QAAQ,EAAEvB,iBAAkB;MAC5BwB,MAAM,EAAC,MAAM;MACbV,SAAS,EAAC;IAAuC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAWF1B,OAAA;MACEgC,OAAO,EAAErB,mBAAoB;MAC7BU,SAAS,EAAC,iHAAiH;MAAAC,QAAA,EAC5H;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERrB,WAAW,iBACVL,OAAA;MAAKqB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzDtB,OAAA;QAAIqB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnD1B,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEjB;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACxB,EAAA,CAhEQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAkEhB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}