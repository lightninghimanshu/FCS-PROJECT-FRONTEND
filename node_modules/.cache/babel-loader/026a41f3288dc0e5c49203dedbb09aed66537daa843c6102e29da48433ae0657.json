{"ast":null,"code":"var _jsxFileName = \"/home/iiitd/project/git/FCS/src/components/Generate/Generate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenCert() {\n  _s();\n  const [inputText, setInputText] = useState(null);\n  const [certificate, setCertificate] = useState('');\n  const handleInputChange = e => {\n    setInputText(e.target.files[0]);\n  };\n  const generateCertificate = async () => {\n    try {\n      const data = {\n        name: \"Himanshu\",\n        dob: \"1999-12-12\",\n        current_date: new Date().toISOString().slice(0, 10),\n        // Format the date as YYYY-MM-DD\n        type: \"Buyer\"\n      };\n      console.log(\"Going to Flask\");\n      console.log(data);\n      const response = await axios.post('https://192.168.2.241:5000/g', data, {\n        headers: {\n          'Content-Type': 'application/json' // Use JSON content type\n        }\n      });\n\n      setCertificate(response.data.certificate);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4 border-2 border-black w-1/2 p-4 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Generate Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"inputtxt\",\n      className: \"text-lg\",\n      children: \"Upload initial cert file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"inputtxt\",\n      onChange: handleInputChange,\n      accept: \".txt\",\n      className: \"border border-gray-300 p-2 rounded-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateCertificate,\n      className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\",\n      children: \"Generate Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), certificate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-black w-1/2 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold\",\n        children: \"Certificate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"overflow-auto\",\n        children: certificate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(GenCert, \"MXnA/bFKYH4sr85CwChXlVREkbk=\");\n_c = GenCert;\nexport default GenCert;\nvar _c;\n$RefreshReg$(_c, \"GenCert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenCert","_s","inputText","setInputText","certificate","setCertificate","handleInputChange","e","target","files","generateCertificate","data","name","dob","current_date","Date","toISOString","slice","type","console","log","response","post","headers","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["/home/iiitd/project/git/FCS/src/components/Generate/Generate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction GenCert() {\r\n  const [inputText, setInputText] = useState(null);\r\n  const [certificate, setCertificate] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputText(e.target.files[0]);\r\n  };\r\n\r\n  const generateCertificate = async () => {\r\n    try {\r\n      const data = {\r\n        name: \"Himanshu\",\r\n        dob: \"1999-12-12\",\r\n        current_date: new Date().toISOString().slice(0, 10), // Format the date as YYYY-MM-DD\r\n        type: \"Buyer\",\r\n      };\r\n\r\n      console.log(\"Going to Flask\");\r\n      console.log(data);\r\n\r\n      const response = await axios.post('https://192.168.2.241:5000/g', data, {\r\n        headers: {\r\n          'Content-Type': 'application/json', // Use JSON content type\r\n        },\r\n      });\r\n\r\n      setCertificate(response.data.certificate);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4 border-2 border-black w-1/2 p-4 rounded-lg\">\r\n      <h1 className=\"text-2xl font-bold\">Generate Certificate</h1>\r\n      <label htmlFor=\"inputtxt\" className=\"text-lg\">\r\n        Upload initial cert file:\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"inputtxt\"\r\n        onChange={handleInputChange}\r\n        accept=\".txt\"\r\n        className=\"border border-gray-300 p-2 rounded-md\"\r\n      />\r\n      <button\r\n        onClick={generateCertificate}\r\n        className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300\"\r\n      >\r\n        Generate Certificate\r\n      </button>\r\n\r\n      {certificate && (\r\n        <div className=\"border-2 border-black w-1/2 p-4 rounded-lg\">\r\n          <h2 className=\"text-lg font-bold\">Certificate:</h2>\r\n          <pre className=\"overflow-auto\">{certificate}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenCert;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}