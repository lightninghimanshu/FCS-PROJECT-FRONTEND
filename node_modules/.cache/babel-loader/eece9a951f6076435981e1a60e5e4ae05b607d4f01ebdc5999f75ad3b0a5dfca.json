{"ast":null,"code":"var _jsxFileName = \"/home/iiitd/project/git/FCS/src/components/Verify/Verify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CertVer() {\n  _s();\n  const [certificateData, setCertificateData] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n  const handleVerifyCertificate = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('certificate_data', certificateData);\n      console.log(\"Going to Flask\");\n      const response = await axios.post('http://192.168.2.241:5000/v', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setValidationResult(response.data.message);\n    } catch (error) {\n      console.error('Error verifying certificate:', error);\n      setValidationResult('Error verifying certificate');\n    }\n  };\n  const handleInputChange = e => {\n    setCertificateData(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Certificate Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Certificate Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"inputtxt\",\n        children: \"Upload cert file file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"inputtxt\",\n        onChange: handleInputChange,\n        accept: \".txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifyCertificate,\n      children: \"Verify Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Validation Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: validationResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CertVer, \"vfa8MYz7S97nA+WoaD6ij7nmJTU=\");\n_c = CertVer;\nexport default CertVer;\nvar _c;\n$RefreshReg$(_c, \"CertVer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CertVer","_s","certificateData","setCertificateData","validationResult","setValidationResult","handleVerifyCertificate","formData","FormData","append","console","log","response","post","headers","data","message","error","handleInputChange","e","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["/home/iiitd/project/git/FCS/src/components/Verify/Verify.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CertVer() {\r\n  const [certificateData, setCertificateData] = useState(null);\r\n  const [validationResult, setValidationResult] = useState('');\r\n\r\n  const handleVerifyCertificate = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('certificate_data', certificateData);\r\n      console.log(\"Going to Flask\")\r\n      const response = await axios.post('http://192.168.2.241:5000/v', formData,{\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setValidationResult(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error verifying certificate:', error);\r\n      setValidationResult('Error verifying certificate');\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setCertificateData(e.target.files[0]);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Certificate Verification</h1>\r\n      <div className='flex flex-col items-center justify-center gap-2'>\r\n        <label>Certificate Data:</label>\r\n        <label for=\"inputtxt\">Upload cert file file:</label>\r\n        <input type=\"file\" id=\"inputtxt\" onChange={handleInputChange} accept=\".txt\" />\r\n      </div>\r\n      <button onClick={handleVerifyCertificate}>Verify Certificate</button>\r\n      <div>\r\n        <h2>Validation Result:</h2>\r\n        <p>{validationResult}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CertVer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}